{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setTodo","useState","selectedUser","setSelectedUser","useEffect","userId","href","name","App","setTodos","isLoaded","setIsLoaded","result","filterTodos","filter","todoItem","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e69ffdd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (obj: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames(\n              { 'has-background-info-light': selectedTodo?.id === todo.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  {\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye-slash': selectedTodo?.id === todo.id },\n                    { 'fa-eye': selectedTodo?.id !== todo.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\ntype Props = {\n  filterBy: string\n  setFilterBy: (str: string) => void,\n  query: string\n  setQuery: (str: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => (\n  <form\n    className=\"field has-addons\"\n    onSubmit={event => event.preventDefault()}\n  >\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={event => (\n            setFilterBy(event.target.value)\n          )}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => (\n          setQuery(event.target.value)\n        )}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length > 0 && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo | null,\n  setTodo: (obj: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!todo) {\n      return;\n    }\n\n    getUser(todo.userId)\n      .then(setSelectedUser);\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {\n        !selectedUser\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${todo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => {\n                    setTodo(null);\n                    setSelectedUser(null);\n                  }}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {todo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {\n                    todo?.completed\n                      ? <strong className=\"has-text-success\">Done</strong>\n                      : <strong className=\"has-text-danger\">Planned</strong>\n                  }\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {selectedUser.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState('all');\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(result => {\n        setTodos(result);\n        setIsLoaded(true);\n      });\n  }, []);\n\n  const lowerText = (str: string) => (\n    str.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const filterTodos = todos\n    .filter(todoItem => {\n      if (filterBy === 'active') {\n        return !todoItem.completed;\n      }\n\n      if (filterBy === 'completed') {\n        return todoItem.completed;\n      }\n\n      return todoItem;\n    })\n    .filter(todoItem => (\n      lowerText(todoItem.title)\n    ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                !isLoaded\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filterTodos}\n                      selectedTodo={todo}\n                      setSelectedTodo={setTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {todo?.userId && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}